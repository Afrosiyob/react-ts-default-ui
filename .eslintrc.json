{
  "env": {
    "browser": true,
    "es2021": true
  },

  "extends": [
    "react-app",
    "react-app/jest",
    "airbnb",
    "airbnb-typescript",
    "plugin:import/typescript",
    "plugin:prettier/recommended",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended",
    "eslint:recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "simple-import-sort",
    "prettier",
    "unused-imports"
  ],
  "rules": {
    "react/jsx-uses-react": ["off"],
    "react/react-in-jsx-scope": ["off"],
    "react/jsx-props-no-spreading": ["warn"],
    "no-shadow": "off",
    "camelcase": "error",
    "spaced-comment": "error",
    "no-duplicate-imports": "error",
    "@typescript-eslint/no-shadow": ["error"],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "import/prefer-default-export": "off",
    "react/prop-types": "off",
    "@typescript-eslint/no-var-requires": 0,
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],

    "react/jsx-filename-extension": [
      "warn",
      {
        "extensions": [".tsx"]
      }
    ],
    "quotes": [
      "error",
      "double",
      {
        "avoidEscape": true
      }
    ],
    "@typescript-eslint/quotes": [
      "error",
      "double",
      {
        "avoidEscape": true
      }
    ],
    "import/extensions": [
      "error",
      "ignorePackages",
      {
        "ts": "never",
        "tsx": "never"
      }
    ],
    "max-len": [
      "warn",
      {
        "code": 120,
        "ignoreStrings": true,
        "ignoreTemplateLiterals": true,
        "ignoreComments": true
      }
    ],
    "@typescript-eslint/comma-dangle": [
      "error",
      {
        "arrays": "only-multiline",
        "objects": "only-multiline",
        "imports": "only-multiline",
        "exports": "only-multiline",
        "functions": "never"
      }
    ],
    "newline-after-var": "error",
    "@typescript-eslint/no-unused-vars": "off",
    "no-unused-vars": "off", // or "@typescript-eslint/no-unused-vars": "off",
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-duplicates": "error",
    "simple-import-sort/exports": "error",
    "simple-import-sort/imports": [
      "error",
      {
        "groups": [
          // Side effect imports.
          ["^\\u0000"],
          // react
          // Packages.
          // Things that start with a letter (or digit or underscore), or `@` followed by a letter.
          [
            "^react$",
            "^react-dom$",
            "^react-router$",
            "^react-router-dom$",
            "^@?\\w"
          ],
          // Config import
          ["^config"],
          ["^constants"],
          ["^store"],
          // Absolute imports and Relative imports.
          ["^services(/.*|$)"],
          ["^helpers(/.*|$)"],
          ["^modules(/.*|$)"],
          ["^containers(/.*|$)"],
          ["^layouts(/.*|$)"],
          ["^pages(/.*|$)"],
          ["^components(/.*|$)"],
          ["^translations(/.*|$)"],
          ["^assets(/.*|$)"],
          // Parent imports. Put `..` last.
          ["^\\.\\.(?!/?$)", "^\\.\\./?$"],
          // Other relative imports. Put same-folder imports and `.` last.
          ["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
          // images imports
          ["^.+\\.(svg|jpg|png)$"],
          // Style imports.
          ["^.+\\.s?css$"],
          ["^"]
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "leadingUnderscore": "require",
        "prefix": ["I"],
        "format": ["UPPER_CASE", "StrictPascalCase"]
      }
    ]
  },
  "settings": {
    "import/resolver": {
      "typescript": {}
    }
  }
}
